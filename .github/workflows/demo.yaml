name: Deployment

concurrency:
  group: production
  cancel-in-progress: true

on:
  push:
    branches:
      - main

env:
  DOCKER_TAG_LATEST: ${{ secrets.DOCKER_TAG_LATEST }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  ID_RSA: ${{ secrets.ID_RSA }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_IP: ${{ secrets.SERVER_IP }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: publish
        uses: actions/checkout@v4
      - run: docker build -t $DOCKER_TAG_LATEST .
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: docker push $DOCKER_TAG_LATEST
  deployment:
    needs: [publish]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo @ID_RSA" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - name: deploy
        uses: actions/checkout@v4
      - run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
      - run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $DOCKER_TAG_LATEST"
      - run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd ~/hack && docker-compose down || true"
      - run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd ~/hack && docker-compose up"
      - run: rm -f ~/.ssh/id_rsa
      - run: echo "This job's status is ${{ job.status }}."
