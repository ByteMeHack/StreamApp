basePath: /api
definitions:
  dto.LoginRequestDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.SignupRequestDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dto.UserModelResponseDTO:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  handlers.ErrorMessage:
    properties:
      message:
        type: string
    type: object
  models.Message:
    properties:
      contents:
        type: string
      message_type:
        $ref: '#/definitions/models.MessageType'
      user_id:
        type: integer
    type: object
  models.MessageType:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - CreatedMessage
    - RegularMessage
    - JoinMessage
    - LeaveMessage
    - KickMessage
  models.Room:
    properties:
      id:
        type: integer
      messages:
        items:
          $ref: '#/definitions/models.Message'
        type: array
      name:
        type: string
      owner_id:
        type: integer
      password:
        type: string
      private:
        type: boolean
      user_ids:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
host: bytemehack.ru
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Log in using email and password
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserModelResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Login into an account
      tags:
      - accounts
  /me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserModelResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Get general account info
      tags:
      - accounts
  /rooms:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization token
        in: header
        name: Set-Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Room'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Register for joining a room (not a websocket part)
      tags:
      - room
    post:
      consumes:
      - application/json
      parameters:
      - description: Room body
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.Room'
      - description: Authorization token
        in: header
        name: Set-Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Create new room
      tags:
      - room
  /rooms/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization token
        in: header
        name: Set-Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Register for joining a room (not a websocket part)
      tags:
      - room
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization token
        in: header
        name: Set-Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Register for joining a room (not a websocket part)
      tags:
      - room
  /signup:
    post:
      consumes:
      - application/json
      description: Sign up using email, password
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.SignupRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserModelResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Create an account
      tags:
      - accounts
  /users/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization token cookie
        in: header
        name: Set-Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserModelResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Get general account info
      tags:
      - accounts
  /users/:id/rooms:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization token cookie
        in: header
        name: Set-Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Room'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorMessage'
      summary: Get user rooms
      tags:
      - accounts
swagger: "2.0"
